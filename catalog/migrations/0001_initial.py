# Generated by Django 5.2.5 on 2025-08-18 23:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("profiles", "0004_userprofile_is_seller_userprofile_kyc_approved_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120, verbose_name="Name")),
                ("slug", models.SlugField(verbose_name="Slug")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="catalog.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=180, verbose_name="Title")),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PRODUCT", "Product"),
                            ("SERVICE", "Service"),
                            ("ROOM", "Room/Hotel"),
                            ("RENTAL_ITEM", "Rental"),
                            ("PROPERTY", "Property"),
                            ("CAR", "Car"),
                        ],
                        max_length=16,
                        verbose_name="Type",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("teaser", models.TextField(blank=True, verbose_name="Teaser")),
                (
                    "hero_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="listing/",
                        verbose_name="Hero image",
                    ),
                ),
                ("object_id", models.PositiveBigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="listings",
                        to="catalog.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="listings",
                        to="profiles.vendor",
                        verbose_name="Vendor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Listing",
                "verbose_name_plural": "Listings",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=180, verbose_name="Name")),
                (
                    "sku",
                    models.CharField(max_length=64, unique=True, verbose_name="SKU"),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Base price"
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Attributes"
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="profiles.vendor",
                        verbose_name="Vendor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sku",
                    models.CharField(max_length=64, unique=True, verbose_name="SKU"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Price"
                    ),
                ),
                (
                    "options",
                    models.JSONField(blank=True, default=dict, verbose_name="Options"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="catalog.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product variant",
                "verbose_name_plural": "Product variants",
            },
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(default=0, verbose_name="Quantity"),
                ),
                (
                    "variant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory",
                        to="catalog.productvariant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory",
                "verbose_name_plural": "Inventory",
            },
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=180, verbose_name="Title")),
                ("address", models.CharField(max_length=220, verbose_name="Address")),
                ("city", models.CharField(max_length=120, verbose_name="City")),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "bedrooms",
                    models.PositiveIntegerField(default=0, verbose_name="Bedrooms"),
                ),
                (
                    "bathrooms",
                    models.PositiveIntegerField(default=0, verbose_name="Bathrooms"),
                ),
                (
                    "area_sqm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Area (m²)",
                    ),
                ),
                (
                    "is_for_rent",
                    models.BooleanField(default=False, verbose_name="For rent"),
                ),
                (
                    "monthly_rent",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Monthly rent",
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Sale price",
                    ),
                ),
                (
                    "deposit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Deposit",
                    ),
                ),
                (
                    "features",
                    models.JSONField(blank=True, default=list, verbose_name="Features"),
                ),
                (
                    "media",
                    models.JSONField(blank=True, default=list, verbose_name="Media"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="properties",
                        to="profiles.vendor",
                        verbose_name="Vendor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Property",
                "verbose_name_plural": "Properties",
            },
        ),
        migrations.CreateModel(
            name="RentalItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=160, verbose_name="Name")),
                (
                    "daily_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Daily price"
                    ),
                ),
                (
                    "deposit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Deposit",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Units available"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Pickup location"
                    ),
                ),
                (
                    "specs",
                    models.JSONField(blank=True, default=dict, verbose_name="Specs"),
                ),
                (
                    "media",
                    models.JSONField(blank=True, default=list, verbose_name="Media"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="rental_items",
                        to="profiles.vendor",
                        verbose_name="Vendor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rental item",
                "verbose_name_plural": "Rental items",
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=160, verbose_name="Name")),
                ("location", models.CharField(max_length=200, verbose_name="Location")),
                (
                    "capacity",
                    models.PositiveIntegerField(default=1, verbose_name="Capacity"),
                ),
                (
                    "nightly_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Nightly price"
                    ),
                ),
                (
                    "amenities",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Amenities"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="rooms",
                        to="profiles.vendor",
                        verbose_name="Vendor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Room",
                "verbose_name_plural": "Rooms",
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=160, verbose_name="Name")),
                (
                    "pricing_type",
                    models.CharField(
                        choices=[
                            ("HOURLY", "Hourly"),
                            ("FIXED", "Fixed"),
                            ("MIXED", "Mixed"),
                        ],
                        default="HOURLY",
                        max_length=8,
                        verbose_name="Pricing type",
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Hourly rate",
                    ),
                ),
                (
                    "min_hours",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Minimum billable hours"
                    ),
                ),
                (
                    "base_fixed_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Base fixed price",
                    ),
                ),
                (
                    "is_remote",
                    models.BooleanField(default=True, verbose_name="Remote available"),
                ),
                (
                    "service_area",
                    models.CharField(
                        blank=True, max_length=160, verbose_name="Service area"
                    ),
                ),
                (
                    "skills",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Skills/tags"
                    ),
                ),
                (
                    "details",
                    models.JSONField(blank=True, default=dict, verbose_name="Details"),
                ),
                (
                    "portfolio_url",
                    models.URLField(blank=True, verbose_name="Portfolio URL"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="services",
                        to="profiles.vendor",
                        verbose_name="Vendor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service",
                "verbose_name_plural": "Services",
            },
        ),
        migrations.CreateModel(
            name="ServicePackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=140, verbose_name="Title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Price"
                    ),
                ),
                (
                    "delivery_days",
                    models.PositiveIntegerField(
                        default=7, verbose_name="Delivery days"
                    ),
                ),
                (
                    "inclusions",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Inclusions"
                    ),
                ),
                (
                    "revisions",
                    models.PositiveIntegerField(default=1, verbose_name="Revisions"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="packages",
                        to="catalog.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service package",
                "verbose_name_plural": "Service packages",
            },
        ),
        migrations.CreateModel(
            name="ServiceRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brief", models.TextField(verbose_name="Brief")),
                (
                    "attachments",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Attachments"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("QUOTED", "Quoted"),
                            ("ACCEPTED", "Accepted"),
                            ("REJECTED", "Rejected"),
                            ("CANCELED", "Canceled"),
                        ],
                        default="PENDING",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "quoted_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Quoted price",
                    ),
                ),
                (
                    "estimated_days",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Estimated days"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests",
                        to="catalog.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service request",
                "verbose_name_plural": "Service requests",
            },
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveBigIntegerField()),
                ("start_date", models.DateField(verbose_name="Start date")),
                ("end_date", models.DateField(verbose_name="End date")),
                (
                    "quantity",
                    models.PositiveIntegerField(default=1, verbose_name="Quantity"),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Total price"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONFIRMED", "Confirmed"),
                            ("CANCELED", "Canceled"),
                        ],
                        default="PENDING",
                        max_length=16,
                        verbose_name="Status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Booking",
                "verbose_name_plural": "Bookings",
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id", "start_date", "end_date"],
                        name="catalog_boo_content_b4ec3d_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["parent", "slug"], name="catalog_cat_parent__b1fc01_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="category",
            unique_together={("slug", "parent")},
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["type", "is_active"], name="catalog_lis_type_dfc19f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["category"], name="catalog_lis_categor_ceee8e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["vendor"], name="catalog_lis_vendor__454c4d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(fields=["slug"], name="catalog_lis_slug_cfb4f1_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="catalog_pro_sku_2c4c34_idx"),
        ),
    ]
